{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/content_pages/show_page.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Fragment, useEffect } from \"react\";\nimport { Container, Row, Col, Button, ButtonGroup } from \"react-bootstrap\";\nimport TopSpace from \"../../components/global_elements/TopSpacer.js\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport { AnimeInfo, KeyStaff, Rating, Recommendations, Reviews } from \"../../components/animepages.component.js\";\nimport Homepage from \"../home_page/Homepage.js\";\nimport { gql, useQuery } from '@apollo/client';\nimport \"./show_page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimePage(props) {\n  _s();\n\n  const params = useParams();\n  const ANIME_QUERY = gql`\n    query AnimeQuery($id: Int)\n    {\n        series: Media(type: ANIME, id: $id) {\n        id\n        title {\n          english\n          romaji\n        }\n        genres\n        description(asHtml: false)\n        coverImage {\n          medium\n          large\n          extraLarge\n        }\n        studios {\n          nodes {\n            name\n          }\n        }\n        episodes\n        season\n        seasonYear\n      }\n    }\n    `;\n  const {\n    error,\n    loading,\n    data,\n    refetch\n  } = useQuery(ANIME_QUERY, {\n    variables: {\n      id: params.animeId\n    }\n  });\n  useEffect(() => {\n    refetch();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading1...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error1 :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  let animeData = {\n    name: data.series.title.english == null ? data.series.title.romaji : data.series.title.english,\n    image: data.series.coverImage.large,\n    genre: data.series.genres,\n    studio: data.series.studios.nodes[0].name,\n    description: data.series.description,\n    episodes: data.series.episodes,\n    season: data.series.season,\n    seasonYear: data.series.seasonYear\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          id: \"back-btn-space\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/Anime`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"back_btn\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"show-page-title\",\n            children: animeData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            id: \"show-page-left-side\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"\",\n                src: animeData.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                vertical: true,\n                id: \"show-page-button-group\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  id: \"tab-name\",\n                  to: `/AnimePage/${params.animeId}/information`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"side-btns\",\n                    children: \"Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  id: \"tab-name\",\n                  to: `/AnimePage/${params.animeId}/ratings`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"side-btns\",\n                    children: \"Overall Ratings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  id: \"tab-name\",\n                  to: `/AnimePage/${params.animeId}/key-staff`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"side-btns\",\n                    children: \"Key Staff\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  id: \"tab-name\",\n                  to: `/Anime/${params.animeId}/reviews`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"side-btns\",\n                    children: \"Reviews\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  id: \"tab-name\",\n                  to: `/AnimePage/${params.animeId}/recommendations`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"side-btns\",\n                    children: \"Recommendations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/AnimePage/:animeid/ratings\",\n                component: Rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/AnimePage/:animeid/information\",\n                component: () => /*#__PURE__*/_jsxDEV(AnimeInfo, {\n                  name: animeData.name,\n                  genre: animeData.genre,\n                  summary: animeData.description,\n                  season: animeData.season,\n                  seasonYear: animeData.seasonYear,\n                  episodes: animeData.episodes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 103\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/AnimePage/:animeid/key-staff\",\n                component: () => /*#__PURE__*/_jsxDEV(KeyStaff, {\n                  studio: animeData.studio,\n                  siteurl: animeData.siteUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/AnimePage/:animeid/reviews\",\n                component: Reviews\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/AnimePage/:animeid/recommendations\",\n                component: () => /*#__PURE__*/_jsxDEV(Recommendations, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 108\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AnimePage, \"6PCuUJ6T7BSFEhy3M5zME6se+QQ=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = AnimePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimePage\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/content_pages/show_page.js"],"names":["React","Component","Fragment","useEffect","Container","Row","Col","Button","ButtonGroup","TopSpace","BrowserRouter","Router","Switch","Route","Link","useParams","AnimeInfo","KeyStaff","Rating","Recommendations","Reviews","Homepage","gql","useQuery","AnimePage","props","params","ANIME_QUERY","error","loading","data","refetch","variables","id","animeId","animeData","name","series","title","english","romaji","image","coverImage","large","genre","genres","studio","studios","nodes","description","episodes","season","seasonYear","siteUrl"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useEffect } from \"react\";\nimport { Container, Row, Col, Button, ButtonGroup } from \"react-bootstrap\";\nimport TopSpace from \"../../components/global_elements/TopSpacer.js\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams  } from \"react-router-dom\";\nimport { AnimeInfo, KeyStaff, Rating, Recommendations, Reviews } from \"../../components/animepages.component.js\";\nimport Homepage from \"../home_page/Homepage.js\";\n\nimport {gql, useQuery} from '@apollo/client';\nimport \"./show_page.css\"\n\nexport default function AnimePage(props) {\n    const params = useParams();\n    const ANIME_QUERY = gql`\n    query AnimeQuery($id: Int)\n    {\n        series: Media(type: ANIME, id: $id) {\n        id\n        title {\n          english\n          romaji\n        }\n        genres\n        description(asHtml: false)\n        coverImage {\n          medium\n          large\n          extraLarge\n        }\n        studios {\n          nodes {\n            name\n          }\n        }\n        episodes\n        season\n        seasonYear\n      }\n    }\n    `\n\n    const {error, loading, data, refetch} = useQuery(ANIME_QUERY,\n        {\n            variables:{\n                id: params.animeId\n            }\n        });\n\n    useEffect(()=>{\n        refetch()\n    }, []\n    );\n\n    \n    if (loading) return <p>Loading1...</p>\n    if (error) return <p>Error1 :(</p>\n\n    \n    let animeData = {\n        name: (data.series.title.english==null)\n            ? data.series.title.romaji :\n            data.series.title.english,\n        image: data.series.coverImage.large,\n        genre: data.series.genres,\n        studio: data.series.studios.nodes[0].name,\n        description: data.series.description,\n        episodes: data.series.episodes,\n        season: data.series.season,\n        seasonYear: data.series.seasonYear\n    }\n\n    \n        return(\n            <Fragment>\n                <TopSpace/>\n                <Router>\n                    <Container>\n                        <Row id=\"back-btn-space\">\n                            <Link to={`/Anime`}>\n                                <Button className=\"back_btn\"><strong>Home</strong></Button>\n                            </Link>\n                        </Row>\n                        <Row>\n                            <p className=\"show-page-title\">{animeData.name}</p>\n                        </Row>\n                        <Row>\n                            <Col id=\"show-page-left-side\">\n                                <Row>\n                                    <img id=\"\" src={animeData.image}/>\n                                </Row>\n                                <Row>\n                                    <ButtonGroup vertical id=\"show-page-button-group\">\n                                        <Link id=\"tab-name\" to={`/AnimePage/${params.animeId}/information`}>\n                                            <Button id=\"side-btns\">\n                                                Information\n                                            </Button>\n                                        </Link>\n                                        <Link id=\"tab-name\" to={`/AnimePage/${params.animeId}/ratings`}>\n                                            <Button id=\"side-btns\">\n                                                Overall Ratings\n                                            </Button>\n                                        </Link>\n\n                                        <Link id=\"tab-name\" to={`/AnimePage/${params.animeId}/key-staff`}>\n                                            <Button id=\"side-btns\">\n                                                Key Staff\n                                            </Button>\n                                        </Link>\n                                        <Link id=\"tab-name\" to={`/Anime/${params.animeId}/reviews`}>\n                                            <Button id=\"side-btns\">\n                                                Reviews\n                                            </Button>\n                                        </Link>\n                                        <Link id=\"tab-name\" to={`/AnimePage/${params.animeId}/recommendations`}>\n                                            <Button id=\"side-btns\">\n                                                Recommendations\n                                            </Button>\n                                        </Link>\n                                    </ButtonGroup>\n                                </Row>\n                            </Col>\n                            <Col>\n                                <Row>\n                                        <Route path=\"/AnimePage/:animeid/ratings\" component={Rating} />\n                                        <Route path=\"/AnimePage/:animeid/information\" component={() =><AnimeInfo name = {animeData.name} genre = {animeData.genre} \n                                            summary = {animeData.description} season = {animeData.season} seasonYear = {animeData.seasonYear}\n                                            episodes = {animeData.episodes} />} />\n                                        <Route path=\"/AnimePage/:animeid/key-staff\" component={() =><KeyStaff studio = {animeData.studio} siteurl = {animeData.siteUrl} />} />\n                                        <Route path=\"/AnimePage/:animeid/reviews\" component={Reviews} />\n                                        <Route path=\"/AnimePage/:animeid/recommendations\" component={() => <Recommendations />} />\n                                </Row>\n                            </Col>\n                        </Row>                \n                    </Container>\n                </Router>\n            </Fragment>\n        );\n    \n}"]},"metadata":{},"sourceType":"module"}
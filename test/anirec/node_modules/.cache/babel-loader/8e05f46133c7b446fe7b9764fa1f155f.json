{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/components/listing_pages/show_more_page.js\";\nimport React, { Component, Fragment, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./show_more_page.css\";\nimport { AIRING_NOW } from '../../GraphQL/Queries';\nimport { useQuery } from '@apollo/client'; //function for landing page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowMorePage() {\n  state = {\n    error: null,\n    isLoaded: false,\n    items: []\n  };\n\n  getAnime = async (query, variables) => {\n    try {\n      const response = await axios.post('https://graphql.anilist.co', {\n        query,\n        variables\n      }); //log the data\n\n      console.log(response.data); //set the data to the state\n\n      this.setState(() => ({\n        isLoaded: true,\n        items: response.data.data.Page.media\n      }));\n    } catch (grid_error) {\n      //if there's an error, set the error to the state\n      this.setState(() => ({\n        error\n      }));\n    }\n  };\n\n  const variables_find = {};\n  this.getAnime(AIRING_NOW, variables_find);\n  const {\n    error,\n    isLoaded,\n    items\n  } = this.state;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"App\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(ShowCard, {\n          name: item.title.english == null ? item.title.romaji : item.title.english,\n          image: item.coverImage.large,\n          genre: item.genres.join(', '),\n          studio: item.studios.nodes[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_c = ShowMorePage;\nexport default ShowMorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMorePage\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/components/listing_pages/show_more_page.js"],"names":["React","Component","Fragment","useEffect","axios","AIRING_NOW","useQuery","ShowMorePage","state","error","isLoaded","items","getAnime","query","variables","response","post","console","log","data","setState","Page","media","grid_error","variables_find","message","map","item","title","english","romaji","coverImage","large","genres","join","studios","nodes","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,QAAR,QAAuB,gBAAvB,C,CAGA;;;;AACA,SAASC,YAAT,GAAuB;AAEnBC,EAAAA,KAAK,GAAG;AACJC,IAAAA,KAAK,EAAE,IADH;AAEJC,IAAAA,QAAQ,EAAE,KAFN;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAAR;;AAMAC,EAAAA,QAAQ,GAAG,OAAOC,KAAP,EAAcC,SAAd,KAA4B;AACnC,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,4BAAX,EAAyC;AAACH,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAzC,CAAvB,CADC,CAGD;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EAJC,CAMD;;AACA,WAAKC,QAAL,CAAc,OAAO;AACnBV,QAAAA,QAAQ,EAAE,IADS;AAEnBC,QAAAA,KAAK,EAAEI,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBE,IAAnB,CAAwBC;AAFZ,OAAP,CAAd;AAID,KAXD,CAWE,OAAOC,UAAP,EAAmB;AACnB;AACA,WAAKH,QAAL,CAAc,OAAO;AAACX,QAAAA;AAAD,OAAP,CAAd;AACD;AACJ,GAhBD;;AAkBA,QAAMe,cAAc,GAAE,EAAtB;AAEA,OAAKZ,QAAL,CAAcP,UAAd,EAA0BmB,cAA1B;AAEI,QAAM;AAAEf,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA4B,KAAKH,KAAvC;;AAEA,MAAGC,KAAH,EAAU;AACN,wBAAM;AAAA,gBAAMA,KAAK,CAACgB;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAN;AACH,GAFD,MAEM,IAAI,CAACf,QAAL,EAAe;AACjB,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AACH,GAFK,MAED;AACD,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAG,KAAvB;AAAA,kBACKC,KAAK,CAACe,GAAN,CAAUC,IAAI,iBACX,QAAC,QAAD;AACI,UAAA,IAAI,EAAGA,IAAI,CAACC,KAAL,CAAWC,OAAX,IAAoB,IAArB,GACAF,IAAI,CAACC,KAAL,CAAWE,MADX,GAEFH,IAAI,CAACC,KAAL,CAAWC,OAHnB;AAII,UAAA,KAAK,EAAEF,IAAI,CAACI,UAAL,CAAgBC,KAJ3B;AAKI,UAAA,KAAK,EAAGL,IAAI,CAACM,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CALZ;AAMI,UAAA,MAAM,EAAEP,IAAI,CAACQ,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC;AANlC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;AACR;;KAxDQ9B,Y;AA0DT,eAAeA,YAAf","sourcesContent":["import React, { Component, Fragment, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./show_more_page.css\";\nimport {AIRING_NOW} from '../../GraphQL/Queries';\nimport {useQuery} from '@apollo/client';\n\n\n//function for landing page\nfunction ShowMorePage(){\n\n    state = {\n        error: null, \n        isLoaded: false,\n        items: []\n    }\n    \n    getAnime = async (query, variables) => {\n        try{ \n          const response = await axios.post('https://graphql.anilist.co', {query, variables});\n    \n          //log the data\n          console.log(response.data)\n    \n          //set the data to the state\n          this.setState(() => ({\n            isLoaded: true,\n            items: response.data.data.Page.media\n          }));\n        } catch (grid_error) {\n          //if there's an error, set the error to the state\n          this.setState(() => ({error}))\n        }\n    }\n    \n    const variables_find ={};\n    \n    this.getAnime(AIRING_NOW, variables_find);\n    \n        const { error, isLoaded, items} = this.state;\n\n        if(error) {\n            return<div>{error.message}</div>;\n        }else if (!isLoaded) {\n            return<div>Loading...</div>;\n        }else{\n            return (\n                <Fragment>\n                    <Header />\n                    <TopSpace />\n                    <Container className = \"App\">\n                        {items.map(item => (\n                            <ShowCard \n                                name={(item.title.english==null)\n                                    ? item.title.romaji :\n                                    item.title.english}\n                                image={item.coverImage.large}\n                                genre= {item.genres.join(', ')}\n                                studio={item.studios.nodes[0].name}\n                        />\n                    ))}\n                    </Container>\n                </Fragment>\n            );\n        }\n}\n\nexport default ShowMorePage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/components/HomePageShowCard.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./HomePageShowCard.css\"; //frame for the anime to show\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\"; //import GenreQuery from \"./dynamic_genre_query\";\n\nimport { gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePageShowCard(props) {\n  let genreCount = props.genre.length;\n  const genreList = [];\n\n  const genreQuery = genreInput => {};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      id: \"HomePage_cards\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"HomePage_card_image\",\n            src: props.image,\n            class: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          id: \"HomePage_card_description\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            id: \"HomePage_card_title\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"HomePage_card_text\",\n              children: props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            id: \"HomePage_card_genres\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"HomePage_card_text\",\n              children: props.genre.map(genres => {\n                if (genreCount < 2) return /*#__PURE__*/_jsxDEV(Link, {\n                  id: \"tag_links\",\n                  to: {\n                    pathname: `/ShowMore/${genres}`,\n                    state: {\n                      query: gql`query($genre: String) {\n                                                                Page(page: 1, perPage: 50){\n                                                                    media(type: ANIME, isAdult: false, genre: $genre){\n                                                                      title{\n                                                                        english\n                                                                        romaji\n                                                                      }\n                                                                      genres\n                                                                      description\n                                                                      coverImage{\n                                                                        medium\n                                                                        large\n                                                                        extraLarge\n                                                                      }\n                                                                      studios{\n                                                                        nodes{\n                                                                          name\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                            }`,\n                      variables: {\n                        genre: genres\n                      }\n                    }\n                  },\n                  children: genres\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 52\n                }, this);else genreCount--;\n                return /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    id: \"tag_links\",\n                    to: {\n                      pathname: `/ShowMore/${genres}`,\n                      state: {\n                        query: gql`query($genre: String) {\n                                                                    Page(page: 1, perPage: 50){\n                                                                        media(type: ANIME, isAdult: false, genre: $genre){\n                                                                          title{\n                                                                            english\n                                                                            romaji\n                                                                          }\n                                                                          genres\n                                                                          description\n                                                                          coverImage{\n                                                                            medium\n                                                                            large\n                                                                            extraLarge\n                                                                          }\n                                                                          studios{\n                                                                            nodes{\n                                                                              name\n                                                                            }\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                }`,\n                        variables: {\n                          genre: genres\n                        }\n                      }\n                    },\n                    children: genres\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: \", \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            id: \"HomePage_card_studio\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"HomePage_card_text\",\n              children: props.studio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_c = HomePageShowCard;\nexport default HomePageShowCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePageShowCard\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/components/HomePageShowCard.js"],"names":["React","Fragment","useEffect","useState","Container","Row","Col","Link","gql","HomePageShowCard","props","genreCount","genre","length","genreList","genreQuery","genreInput","image","name","map","genres","pathname","state","query","variables","studio"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./HomePageShowCard.css\";\r\n//frame for the anime to show\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n//import GenreQuery from \"./dynamic_genre_query\";\r\nimport {gql} from '@apollo/client'\r\n\r\n\r\nfunction HomePageShowCard(props){\r\n    let genreCount = props.genre.length\r\n    const genreList = []\r\n    \r\n    const genreQuery = (genreInput) => {\r\n        \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n                <Container id=\"HomePage_cards\">\r\n                    <Row>\r\n                        <Col>\r\n                            <img id=\"HomePage_card_image\" src={props.image} class=\"center\"/>\r\n                        </Col>\r\n                        <Col id=\"HomePage_card_description\">\r\n                            <Row id=\"HomePage_card_title\">\r\n                                <p id=\"HomePage_card_text\">{props.name}</p>\r\n                            </Row>\r\n                            <Row id=\"HomePage_card_genres\">\r\n                                <p id=\"HomePage_card_text\">\r\n                                    {props.genre.map((genres) =>\r\n                                        {\r\n                                        if (genreCount < 2)\r\n                                            return <Link id=\"tag_links\" to={{\r\n                                                        pathname:`/ShowMore/${genres}`,\r\n                                                        state: {\r\n                                                            query: gql`query($genre: String) {\r\n                                                                Page(page: 1, perPage: 50){\r\n                                                                    media(type: ANIME, isAdult: false, genre: $genre){\r\n                                                                      title{\r\n                                                                        english\r\n                                                                        romaji\r\n                                                                      }\r\n                                                                      genres\r\n                                                                      description\r\n                                                                      coverImage{\r\n                                                                        medium\r\n                                                                        large\r\n                                                                        extraLarge\r\n                                                                      }\r\n                                                                      studios{\r\n                                                                        nodes{\r\n                                                                          name\r\n                                                                        }\r\n                                                                      }\r\n                                                                    }\r\n                                                                  }\r\n                                                            }`,\r\n                                                            variables: {\r\n                                                                genre: genres\r\n                                                            }\r\n                                                        }\r\n                                                    }}>{genres}</Link>\r\n                                        else \r\n                                            genreCount--;\r\n                                            return  <Fragment>\r\n                                                        <Link id=\"tag_links\" to={{\r\n                                                            pathname:`/ShowMore/${genres}`,\r\n                                                            state: {\r\n                                                                query: gql`query($genre: String) {\r\n                                                                    Page(page: 1, perPage: 50){\r\n                                                                        media(type: ANIME, isAdult: false, genre: $genre){\r\n                                                                          title{\r\n                                                                            english\r\n                                                                            romaji\r\n                                                                          }\r\n                                                                          genres\r\n                                                                          description\r\n                                                                          coverImage{\r\n                                                                            medium\r\n                                                                            large\r\n                                                                            extraLarge\r\n                                                                          }\r\n                                                                          studios{\r\n                                                                            nodes{\r\n                                                                              name\r\n                                                                            }\r\n                                                                          }\r\n                                                                        }\r\n                                                                      }\r\n                                                                }`,\r\n                                                                variables: {\r\n                                                                    genre: genres\r\n                                                                }\r\n                                                            }\r\n                                                            }}>{genres}\r\n                                                        </Link>\r\n                                                        <a>, </a>\r\n                                                    </Fragment>\r\n                                        }\r\n                                    )}\r\n                                </p>\r\n                            </Row>\r\n                            <Row id=\"HomePage_card_studio\">\r\n                                <p id=\"HomePage_card_text\">{props.studio}</p>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default HomePageShowCard;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/listing_pages/ShowMore.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport \"./AiringNowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid';\nimport { chunk } from 'lodash';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowPage(props) {\n  _s();\n\n  /*    const {error, loading, data} = useQuery(AIRING_NOW);\n  \n      useEffect(()=>{\n          console.log(data)\n         }, [data]\n        );\n  \n        if (loading) return <p>Loading1...</p>\n        else if (error) return <p>Error1 :(</p>\n      else{*/\n  //let data = useLocation();\n  const location = useLocation();\n  const rows = chunk(location.state, 4);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"float-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        id: \"back_btn_space\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          class: \"back_btn\",\n          to: \"/Anime\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: rows.map(cols => /*#__PURE__*/_jsxDEV(Row, {\n          children: cols.map(col => /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(ListingPageShowCard, {\n              image: col.coverImage.large,\n              name: col.title.english == null ? col.title.romaji : col.title.english,\n              genre: col.genres.join(', '),\n              studio: col.studios.nodes.map(studio_name => studio_name.name).join(', ')\n            }, col.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ShowPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ShowPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPage\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/listing_pages/ShowMore.js"],"names":["React","Fragment","useEffect","TopSpace","ListingPageShowCard","Container","Col","Row","Grid","chunk","Link","useLocation","ShowPage","props","location","rows","state","map","cols","col","coverImage","large","title","english","romaji","genres","join","studios","nodes","studio_name","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,oBAA/B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,IAAI,GAAGN,KAAK,CAACK,QAAQ,CAACE,KAAV,EAAiB,CAAjB,CAAlB;AACA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAE,QAA3B;AAAA,iCAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAA,kBACKD,IAAI,CAACE,GAAL,CAAUC,IAAD,iBACN,QAAC,GAAD;AAAA,oBACKA,IAAI,CAACD,GAAL,CAAUE,GAAD,iBACN,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,mBAAD;AACI,cAAA,KAAK,EAAEA,GAAG,CAACC,UAAJ,CAAeC,KAD1B;AAEI,cAAA,IAAI,EAAGF,GAAG,CAACG,KAAJ,CAAUC,OAAV,IAAmB,IAApB,GACAJ,GAAG,CAACG,KAAJ,CAAUE,MADV,GAEFL,GAAG,CAACG,KAAJ,CAAUC,OAJlB;AAKI,cAAA,KAAK,EAAEJ,GAAG,CAACM,MAAJ,CAAWC,IAAX,CAAgB,IAAhB,CALX;AAMI,cAAA,MAAM,EAAEP,GAAG,CAACQ,OAAJ,CAAYC,KAAZ,CAAkBX,GAAlB,CAAsBY,WAAW,IACrCA,WAAW,CAACC,IADR,EACcJ,IADd,CACmB,IADnB;AANZ,eAA0BP,GAAG,CAACY,EAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA5CmBnB,Q;UAYCD,W;;;KAZDC,Q","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport \"./AiringNowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid'\nimport { chunk } from 'lodash'\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function ShowPage(props){\n/*    const {error, loading, data} = useQuery(AIRING_NOW);\n\n    useEffect(()=>{\n        console.log(data)\n       }, [data]\n      );\n\n      if (loading) return <p>Loading1...</p>\n      else if (error) return <p>Error1 :(</p>\n    else{*/\n        //let data = useLocation();\n        const location = useLocation();\n        const rows = chunk(location.state, 4)\n        return (\n            <Fragment>\n                <TopSpace />\n                <Container className=\"float-md-3\">\n                    <Row id=\"back_btn_space\">\n                        <Link class=\"back_btn\" to={\"/Anime\"}><strong>Back</strong></Link>\n                    </Row>\n                    <Grid>\n                        {rows.map((cols) => (\n                            <Row>\n                                {cols.map((col) => (\n                                    <Col md={3}>\n                                        <ListingPageShowCard key={col.id} \n                                            image={col.coverImage.large} \n                                            name={(col.title.english==null)\n                                                ? col.title.romaji :\n                                                col.title.english}\n                                            genre={col.genres.join(', ')}\n                                            studio={col.studios.nodes.map(studio_name => \n                                                studio_name.name).join(', ')}/>\n                                    </Col>\n                                )\n                                )}\n                            </Row>\n                        )\n                        )}\n                    </Grid>\n                </Container>\n            </Fragment>\n        );\n    }"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/listing_pages/GeneralShowMore.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport \"./GeneralShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Button, Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid';\nimport { chunk } from 'lodash';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GeneralShowMore() {\n  _s();\n\n  const params = useParams();\n  const location = useLocation();\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(location.state.query, {\n    variables: {\n      page: params.pageNum\n    }\n  });\n  useEffect(() => {}, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading1...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);else if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error1 :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 28\n  }, this);else {\n    const rows = chunk(data.Page.media, 4);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          id: \"back_btn_space\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"back_btn\",\n            to: \"/Anime\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"back_btn\",\n              id: \"btn-right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          id: \"grid\",\n          children: rows.map(cols => /*#__PURE__*/_jsxDEV(Row, {\n            children: cols.map(col => /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              id: \"grid-content\",\n              children: /*#__PURE__*/_jsxDEV(ListingPageShowCard, {\n                image: col.coverImage.large,\n                name: col.title.english == null ? col.title.romaji : col.title.english,\n                genre: col.genres,\n                studio: col.studios.nodes.length > 5 ? col.studios.nodes.slice(0, 6).map(studio_name => studio_name.name).join(', ') : col.studios.nodes.map(studio_name => studio_name.name).join(', '),\n                id: col.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), params.pageNum > 1 ? params.pageNum > data.length - Number(1) ? /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`,\n            state: {\n              query: location.state.query\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"page-btn\",\n            children: \"Previous Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`,\n              state: {\n                query: location.state.query\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"page-btn\",\n              children: \"Previous Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`,\n              state: {\n                query: location.state.query\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"page-btn\",\n              children: \"Next Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`,\n            state: {\n              query: location.state.query\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"page-btn\",\n            children: \"Next Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(GeneralShowMore, \"GgrAFtZtYcL0Lp95tSjIGiKcB/I=\", false, function () {\n  return [useParams, useLocation, useQuery];\n});\n\n_c = GeneralShowMore;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralShowMore\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/listing_pages/GeneralShowMore.js"],"names":["React","Fragment","useEffect","TopSpace","ListingPageShowCard","Button","Container","Col","Row","Grid","chunk","Link","useParams","useLocation","useQuery","gql","GeneralShowMore","params","location","error","loading","data","state","query","variables","page","pageNum","rows","Page","media","map","cols","col","coverImage","large","title","english","romaji","genres","studios","nodes","length","slice","studio_name","name","join","id","Number","pathname","queryName"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport \"./GeneralShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Button, Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid'\nimport { chunk } from 'lodash'\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport {useQuery, gql} from '@apollo/client'\n \nexport default function GeneralShowMore(){\n\n    const params = useParams();\n    const location = useLocation();\n    const {error, loading, data} = useQuery(location.state.query,\n        {\n            variables:\n            {\n                page: params.pageNum\n            }\n        }\n    );\n\n    useEffect(()=>{\n       }, [data]\n    );\n\n\n\n    if (loading) return <p>Loading1...</p>\n    else if (error) return <p>Error1 :(</p>\n    else{\n        const rows = chunk(data.Page.media, 4)\n        return (\n            <Fragment>\n                <TopSpace />\n                <Container className=\"\">\n                    <Row id=\"back_btn_space\">\n                        <Link className=\"back_btn\" to={\"/Anime\"}>\n                        <Button className=\"back_btn\" id=\"btn-right\"><strong>Home</strong></Button>\n                        </Link>\n                    </Row>\n                    <Grid id=\"grid\">\n                        {rows.map((cols) => (\n                            <Row>\n                                {cols.map((col) => (\n                                    <Col md={3} id=\"grid-content\">\n                                        <ListingPageShowCard   \n                                            image={col.coverImage.large} \n                                            name={(col.title.english==null)\n                                                ? col.title.romaji :\n                                                col.title.english}\n                                            genre={col.genres}\n                                            studio={(col.studios.nodes.length > 5) ? col.studios.nodes.slice(0,6).map(studio_name => \n                                                studio_name.name).join(', ') :\n                                                col.studios.nodes.map(studio_name => \n                                                studio_name.name).join(', ')}\n                                            id={col.id}/>\n                                    </Col>\n                                )\n                                )}\n                            </Row>\n                        )\n                        )}\n\n</Grid>\n                    {/* pagination */}\n                    {(params.pageNum > 1) ?\n                                    ((params.pageNum > data.length -Number(1)) ?\n                                        <Link to={{\n                                            pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`,\n                                            state: {\n                                                query: location.state.query\n                                            }\n                                        }}>\n                                            <Button className=\"page-btn\">\n                                                Previous Page\n                                            </Button>\n                                        </Link> :\n                                        <Fragment>\n                                                <Link to={{\n                                                    pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`,\n                                                    state: {\n                                                        query: location.state.query\n                                                    }}}>\n                                                    <Button  className=\"page-btn\">\n                                                        Previous Page\n                                                    </Button>\n                                                </Link>\n                                                <Link to={{\n                                                    pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`,\n                                                    state: {\n                                                        query: location.state.query\n                                                    }\n                                                }}>\n                                                    <Button  className=\"page-btn\">\n                                                        Next Page\n                                                    </Button>\n                                                </Link> \n                                        </Fragment> ): \n                                    <Link to={{\n                                        pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`,\n                                            state: {\n                                                query: location.state.query\n                                        }}}>\n                                        <Button  className=\"page-btn\">\n                                            Next Page\n                                        </Button>\n                                    </Link>\n                                }                     \n                </Container>\n            </Fragment>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/listing_pages/ShowMore.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./ShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid';\nimport { chunk } from 'lodash';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowMore(props) {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [response, setResponse] = useState({});\n  const [expandedTag, setExpandedTag] = useState(\"\");\n  const GENRE_QUERY = gql`\n        query GenreQuery($genre: String) {\n            Page(page: 1, perPage: 50){\n                media(type: ANIME, isAdult: false, genre: $genre){\n                  title{\n                    english\n                    romaji\n                  }\n                  genres\n                  description\n                  coverImage{\n                    medium\n                    large\n                    extraLarge\n                  }\n                  studios{\n                    nodes{\n                      name\n                    }\n                  }\n                }\n            }\n        }`;\n  console.log(data);\n  useEffect(_s2(() => {\n    var _s = $RefreshSig$();\n\n    _s2();\n\n    //get genre from url endpoint\n    setExpandedTag(useParams().expandedTag);\n\n    function fetchResponse() {\n      _s();\n\n      const {\n        error,\n        loading,\n        data\n      } = useQuery(GENRE_QUERY, {\n        variables: {\n          genre: expandedTag\n        }\n      });\n      setResponse(data);\n    }\n\n    _s(fetchResponse, \"GiCbuNzsD6/Beq272EawZ+N+s04=\", false, function () {\n      return [useQuery];\n    });\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  }), []);\n  const rows = chunk(response.Page.media, 4);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"float-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        id: \"back_btn_space\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"back_btn\",\n          to: \"/Anime\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: rows.map(cols => /*#__PURE__*/_jsxDEV(Row, {\n          children: cols.map(col => /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(ListingPageShowCard, {\n              image: col.coverImage.large,\n              name: col.title.english == null ? col.title.romaji : col.title.english,\n              genre: col.genres.join(', '),\n              studio: col.studios.nodes.map(studio_name => studio_name.name).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(ShowMore, \"+9/cBOL4QyDd3kD214P/dES1oEs=\");\n\n_c = ShowMore;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMore\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/listing_pages/ShowMore.js"],"names":["React","Fragment","useEffect","useState","TopSpace","ListingPageShowCard","Container","Col","Row","Grid","chunk","Link","useParams","useLocation","useQuery","gql","ShowMore","props","response","setResponse","expandedTag","setExpandedTag","GENRE_QUERY","console","log","data","fetchResponse","error","loading","variables","genre","rows","Page","media","map","cols","col","coverImage","large","title","english","romaji","genres","join","studios","nodes","studio_name","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,oBAA/B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMmB,WAAW,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAtBI;AAwBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAvB,EAAAA,SAAS,KAAC,MAAI;AAAA;;AAAA;;AACV;AACAmB,IAAAA,cAAc,CAACT,SAAS,GAAGQ,WAAb,CAAd;;AAEA,aAASM,aAAT,GAAyB;AAAA;;AACrB,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA,OAAR;AAAiBH,QAAAA;AAAjB,UAAyBX,QAAQ,CACnCQ,WADmC,EAEnC;AACIO,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAEV;AADA;AADf,OAFmC,CAAvC;AASAD,MAAAA,WAAW,CAACM,IAAD,CAAX;AACH;;AAfS,OAIDC,aAJC;AAAA,cAKyBZ,QALzB;AAAA;AAgBV,GAhBK;AAAA,YAEUF,SAFV;AAAA,MAgBH,EAhBG,CAAT;AAmBA,QAAMmB,IAAI,GAAGrB,KAAK,CAACQ,QAAQ,CAACc,IAAT,CAAcC,KAAf,EAAsB,CAAtB,CAAlB;AACA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,EAAE,EAAE,QAA/B;AAAA,iCAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAA,kBACKF,IAAI,CAACG,GAAL,CAAUC,IAAD,iBACN,QAAC,GAAD;AAAA,oBACKA,IAAI,CAACD,GAAL,CAAUE,GAAD,iBACN,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,mBAAD;AACI,cAAA,KAAK,EAAEA,GAAG,CAACC,UAAJ,CAAeC,KAD1B;AAEI,cAAA,IAAI,EAAGF,GAAG,CAACG,KAAJ,CAAUC,OAAV,IAAmB,IAApB,GACAJ,GAAG,CAACG,KAAJ,CAAUE,MADV,GAEFL,GAAG,CAACG,KAAJ,CAAUC,OAJlB;AAKI,cAAA,KAAK,EAAEJ,GAAG,CAACM,MAAJ,CAAWC,IAAX,CAAgB,IAAhB,CALX;AAMI,cAAA,MAAM,EAAEP,GAAG,CAACQ,OAAJ,CAAYC,KAAZ,CAAkBX,GAAlB,CAAsBY,WAAW,IACrCA,WAAW,CAACC,IADR,EACcJ,IADd,CACmB,IADnB;AANZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;IA/EuB3B,Q;;KAAAA,Q","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./ShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid'\nimport { chunk } from 'lodash'\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport {useQuery, gql} from '@apollo/client'\n\nexport default function ShowMore(props){\n    const [response, setResponse] = useState({})\n    const [expandedTag, setExpandedTag] = useState(\"\")\n\n    const GENRE_QUERY = gql`\n        query GenreQuery($genre: String) {\n            Page(page: 1, perPage: 50){\n                media(type: ANIME, isAdult: false, genre: $genre){\n                  title{\n                    english\n                    romaji\n                  }\n                  genres\n                  description\n                  coverImage{\n                    medium\n                    large\n                    extraLarge\n                  }\n                  studios{\n                    nodes{\n                      name\n                    }\n                  }\n                }\n            }\n        }`;\n\n    console.log(data)\n    useEffect(()=>{\n        //get genre from url endpoint\n        setExpandedTag(useParams().expandedTag);\n\n        function fetchResponse() {\n            const {error, loading, data} = useQuery(\n                GENRE_QUERY,\n                {\n                    variables: {\n                        genre: expandedTag\n                    }\n                }\n            );\n\n            setResponse(data);   \n        }\n       }, []\n    );\n\n    const rows = chunk(response.Page.media, 4)\n    return (\n        <Fragment>\n            <TopSpace />\n            <Container className=\"float-md-3\">\n                <Row id=\"back_btn_space\">\n                    <Link className=\"back_btn\" to={\"/Anime\"}><strong>Back</strong></Link>\n                </Row>\n                <Grid>\n                    {rows.map((cols) => (\n                        <Row>\n                            {cols.map((col) => (\n                                <Col md={3}>\n                                    <ListingPageShowCard   \n                                        image={col.coverImage.large} \n                                        name={(col.title.english==null)\n                                            ? col.title.romaji :\n                                            col.title.english}\n                                        genre={col.genres.join(', ')}\n                                        studio={col.studios.nodes.map(studio_name => \n                                            studio_name.name).join(', ')}/>\n                                </Col>\n                            )\n                            )}\n                        </Row>\n                    )\n                    )}\n                </Grid>\n            </Container>\n        </Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/src/components/home_page/ShowCard.js\";\nimport React, { Fragment } from \"react\";\nimport \"./ShowCard.css\"; //frame for the anime to show\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport logo from \"./logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(({\n  graphqlErrors,\n  networkError\n}) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({\n      message,\n      location,\n      path\n    }) => {\n      alert(`GraphQL error $(message)`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: 'https://graphql.anilist.co/',\n  fetchOptions: {\n    method: 'POST'\n  },\n  useGETForQueries: false\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\nfunction ShowCard(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Container, {\n        id: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          id: \"card_body\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            id: \"image\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"text\",\n              children: props.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            id: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              id: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"text\",\n                children: props.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              id: \"genres\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"text\",\n                children: props.genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              id: \"studio\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"text\",\n                children: props.studio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              id: \"key_staff\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"text\",\n                children: props.key_staff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ShowCard;\nexport default ShowCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowCard\");","map":{"version":3,"sources":["/home/jason/AniRec/test/src/components/home_page/ShowCard.js"],"names":["React","Fragment","Container","Row","Col","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","fetchOptions","method","useGETForQueries","client","cache","ShowCard","props","image","name","genre","studio","key_staff"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport \"./ShowCard.css\";\r\n//frame for the anime to show\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport {ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from, } from '@apollo/client'\r\nimport {onError} from '@apollo/client/link/error'\r\nimport logo from './logo.svg';\r\n\r\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\r\n    if (graphqlErrors){\r\n      graphqlErrors.map(({ message, location, path }) => {\r\n        alert(`GraphQL error $(message)`);\r\n      });\r\n    }\r\n  });\r\n  \r\n  const link = from([\r\n    errorLink, new HttpLink({uri: 'https://graphql.anilist.co/', fetchOptions: {method: 'POST'}, useGETForQueries: false})\r\n  ]);\r\n  \r\n  const client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    link: link,\r\n  });\r\n\r\nfunction ShowCard(props){\r\n    return(\r\n        <Fragment>\r\n            <ApolloProvider client={client}>\r\n                {\" \"}\r\n                <Container id=\"card\">\r\n                    <Row id=\"card_body\">\r\n                        <Col id=\"image\">\r\n                            <p id=\"text\">{props.image}</p>\r\n                        </Col>\r\n                        <Col id=\"description\">\r\n                            <Row id=\"title\">\r\n                                <p id=\"text\">{props.name}</p>\r\n                            </Row>\r\n                            <Row id=\"genres\">\r\n                                <p id=\"text\">{props.genre}</p>\r\n                            </Row>\r\n                            <Row id=\"studio\">\r\n                                <p id=\"text\">{props.studio}</p>\r\n                            </Row>\r\n                            <Row id=\"key_staff\">\r\n                                <p id=\"text\">{props.key_staff}</p>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ApolloProvider>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ShowCard;"]},"metadata":{},"sourceType":"module"}
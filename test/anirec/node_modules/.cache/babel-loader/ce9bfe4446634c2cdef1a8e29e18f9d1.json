{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/listing_pages/GeneralShowMore.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport \"./GeneralShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid';\nimport { chunk } from 'lodash';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GeneralShowMore() {\n  _s();\n\n  const TRENDING = gql`\n    query AiringTrendingShowMore($page: Int){\n      Page(page: $page, perPage: 48) {\n        media(sort: TRENDING_DESC, isAdult: false, type: ANIME) {\n          id\n          title {\n            romaji\n            english\n          }\n          genres\n          description(asHtml: false)\n          coverImage {\n            medium\n            large\n            extraLarge\n          }\n          studios {\n            nodes {\n              name\n            }\n          }\n        }\n      }\n    }\n  `;\n  const AIRING_NOW = gql`\n    query ShowMore($page: Int){\n        Page(page: $page, perPage: 48){\n        media(type: ANIME, isAdult: false, season: SPRING, seasonYear: 2021){\n            title{\n            english\n            romaji\n            }\n            genres\n            description(asHtml: false)\n            coverImage{\n            medium\n            large\n            extraLarge\n            }\n            studios{\n            nodes{\n                name\n            }\n            }\n        }\n        }\n    }\n    `;\n  const params = useParams();\n  const {\n    query\n  } = null;\n  if (params.queryName == \"airing_now\") query = AIRING_NOW;else if (params.queryName == \"trending\") query = TRENDING;\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(query, {\n    variables: {\n      page: params.pageNum\n    }\n  });\n  useEffect(() => {}, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading1...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 25\n  }, this);else if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error1 :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 28\n  }, this);else {\n    const rows = chunk(data.Page.media, 4);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          id: \"back_btn_space\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"back_btn\",\n            to: \"/Anime\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [rows.map(cols => /*#__PURE__*/_jsxDEV(Row, {\n            children: cols.map(col => /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              id: \"grid-content\",\n              children: /*#__PURE__*/_jsxDEV(ListingPageShowCard, {\n                image: col.coverImage.large,\n                name: col.title.english == null ? col.title.romaji : col.title.english,\n                genre: col.genres,\n                studio: col.studios.nodes.length > 5 ? col.studios.nodes.slice(0, 6).map(studio_name => studio_name.name).join(', ') : col.studios.nodes.map(studio_name => studio_name.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)), params.pageNum > 1 ? params.pageNum > data.length - Number(1) ? /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`\n            },\n            children: \"Previous Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`\n              },\n              children: \"Previous Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`\n              },\n              children: \"Next Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`\n            },\n            children: \"Next Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(GeneralShowMore, \"25n/qCh/P23zXwi1k1f5sMSjlu4=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = GeneralShowMore;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralShowMore\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/listing_pages/GeneralShowMore.js"],"names":["React","Fragment","useEffect","TopSpace","ListingPageShowCard","Container","Col","Row","Grid","chunk","Link","useParams","useLocation","useQuery","gql","GeneralShowMore","TRENDING","AIRING_NOW","params","query","queryName","error","loading","data","variables","page","pageNum","rows","Page","media","map","cols","col","coverImage","large","title","english","romaji","genres","studios","nodes","length","slice","studio_name","name","join","Number","pathname"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport \"./GeneralShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid'\nimport { chunk } from 'lodash'\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport {useQuery, gql} from '@apollo/client'\n \nexport default function GeneralShowMore(){\n    const TRENDING = gql`\n    query AiringTrendingShowMore($page: Int){\n      Page(page: $page, perPage: 48) {\n        media(sort: TRENDING_DESC, isAdult: false, type: ANIME) {\n          id\n          title {\n            romaji\n            english\n          }\n          genres\n          description(asHtml: false)\n          coverImage {\n            medium\n            large\n            extraLarge\n          }\n          studios {\n            nodes {\n              name\n            }\n          }\n        }\n      }\n    }\n  `;\n\n\n    const AIRING_NOW = gql`\n    query ShowMore($page: Int){\n        Page(page: $page, perPage: 48){\n        media(type: ANIME, isAdult: false, season: SPRING, seasonYear: 2021){\n            title{\n            english\n            romaji\n            }\n            genres\n            description(asHtml: false)\n            coverImage{\n            medium\n            large\n            extraLarge\n            }\n            studios{\n            nodes{\n                name\n            }\n            }\n        }\n        }\n    }\n    `;\n\n    const params = useParams();\n    const { query } = null;\n    if (params.queryName == \"airing_now\")\n        query = AIRING_NOW;\n    else if (params.queryName == \"trending\")\n        query = TRENDING;\n    const {error, loading, data} = useQuery(query,\n        {\n            variables:\n            {\n                page: params.pageNum\n            }\n        }\n    );\n\n    useEffect(()=>{\n       }, [data]\n    );\n\n\n\n    if (loading) return <p>Loading1...</p>\n    else if (error) return <p>Error1 :(</p>\n    else{\n        const rows = chunk(data.Page.media, 4)\n        return (\n            <Fragment>\n                <TopSpace />\n                <Container className=\"\">\n                    <Row id=\"back_btn_space\">\n                        <Link className=\"back_btn\" to={\"/Anime\"}><strong>Back</strong></Link>\n                    </Row>\n                    <Grid>\n                        {rows.map((cols) => (\n                            <Row>\n                                {cols.map((col) => (\n                                    <Col md={3} id=\"grid-content\">\n                                        <ListingPageShowCard   \n                                            image={col.coverImage.large} \n                                            name={(col.title.english==null)\n                                                ? col.title.romaji :\n                                                col.title.english}\n                                            genre={col.genres}\n                                            studio={(col.studios.nodes.length > 5) ? col.studios.nodes.slice(0,6).map(studio_name => \n                                                studio_name.name).join(', ') :\n                                                col.studios.nodes.map(studio_name => \n                                                studio_name.name).join(', ')}/>\n                                    </Col>\n                                )\n                                )}\n                            </Row>\n                        )\n                        )}\n                        {(params.pageNum > 1) ?\n                                ((params.pageNum > data.length - Number(1)) ?\n                                    <Link to={{pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`}}>\n                                        Previous Page\n                                    </Link> :\n                                    <Fragment>\n                                            <Link to={{pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) - 1}`}}>\n                                                Previous Page\n                                            </Link>\n                                            <Link to={{pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`}}>\n                                                Next Page\n                                            </Link> \n                                    </Fragment> ): \n                                <Link to={{pathname:`/ShowMore/${params.queryName}/${Number(params.pageNum) + 1}`}}>\n                                    Next Page\n                                </Link>\n                            }\n                    </Grid>\n                </Container>\n            </Fragment>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
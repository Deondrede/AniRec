{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/content_pages/show_page.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Fragment, useEffect } from \"react\";\nimport { Container, Row, Col, Button, ButtonGroup } from \"react-bootstrap\";\nimport TopSpace from \"../../components/global_elements/TopSpacer.js\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation, useParams } from \"react-router-dom\";\nimport { AnimeInfo, KeyStaff, Rating, Recommendations, Reviews } from \"../../components/animepages.component.js\";\nimport Login from \"../landing_page/login.component.js\";\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimePage(props) {\n  _s();\n\n  const location = useLocation();\n  const ANIMEQUERY = gql`\n    {\n        series: Media(type: ANIME, id: ${location.state.id}) {\n        id\n        title {\n          english\n          romaji\n        }\n        genres\n        description\n        coverImage {\n          medium\n          large\n          extraLarge\n        }\n        studios {\n          nodes {\n            name\n          }\n        }\n        episodes\n        season\n        seasonYear\n      }\n    }`;\n  const params = useParams();\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(ANIMEQUERY);\n  useEffect(() => {}, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading1...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error1 :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  let animedata = {\n    name: data.series.title.english == null ? data.series.title.romaji : data.series.title.english,\n    image: data.series.coverImage.large,\n    genre: data.series.genres,\n    studio: data.series.studios.nodes[0].name,\n    description: data.series.description,\n    episodes: data.series.episodes,\n    season: data.series.season,\n    seasonYear: data.series.seasonYear\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/Anime',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: animedata.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"HomePage_card_image\",\n            src: animedata.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              vertical: true,\n              block: true,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                id: \"tab_name\",\n                to: `/Anime/${location.state.id}/ratings`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Overall Ratings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 96\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                id: \"tab_name\",\n                to: `/Anime/${location.state.id}/information`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 100\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                id: \"tab_name\",\n                to: `/Anime/${location.state.id}/key-staff`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Key Staff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 98\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                id: \"tab_name\",\n                to: `/Anime/${location.state.id}/reviews`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Reviews\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 96\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                id: \"tab_name\",\n                to: `/Anime/${location.state.id}/recommendations`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Recommendations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 104\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  children: [/*#__PURE__*/_jsxDEV(Route, {\n                    exact: true,\n                    path: \"/\",\n                    component: Login\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/Anime/:animeid/ratings\",\n                    component: Rating\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/Anime/:animeid/information\",\n                    component: () => /*#__PURE__*/_jsxDEV(AnimeInfo, {\n                      name: animedata.name,\n                      genre: animedata.genre,\n                      summary: animedata.description,\n                      season: animedata.season,\n                      seasonYear: animedata.seasonYear,\n                      episodes: animedata.episodes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 99\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/Anime/:animeid/key-staff\",\n                    component: () => /*#__PURE__*/_jsxDEV(KeyStaff, {\n                      studio: animedata.studio,\n                      siteurl: animedata.siteUrl\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 97\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/Anime/:animeid/reviews\",\n                    component: Reviews\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/Anime/:animeid/recommendations\",\n                    component: () => /*#__PURE__*/_jsxDEV(Recommendations, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 104\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AnimePage, \"JoVYKUsXObbaKUJJEgqEg0ewMGA=\", false, function () {\n  return [useLocation, useParams, useQuery];\n});\n\n_c = AnimePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimePage\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/content_pages/show_page.js"],"names":["React","Component","Fragment","useEffect","Container","Row","Col","Button","ButtonGroup","TopSpace","BrowserRouter","Router","Switch","Route","Link","useLocation","useParams","AnimeInfo","KeyStaff","Rating","Recommendations","Reviews","Login","gql","useQuery","AnimePage","props","location","ANIMEQUERY","state","id","params","error","loading","data","animedata","name","series","title","english","romaji","image","coverImage","large","genre","genres","studio","studios","nodes","description","episodes","season","seasonYear","siteUrl"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useEffect } from \"react\";\nimport { Container, Row, Col, Button, ButtonGroup } from \"react-bootstrap\";\nimport TopSpace from \"../../components/global_elements/TopSpacer.js\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation, useParams  } from \"react-router-dom\";\nimport { AnimeInfo, KeyStaff, Rating, Recommendations, Reviews } from \"../../components/animepages.component.js\";\nimport Login from \"../landing_page/login.component.js\";\nimport {gql, useQuery} from '@apollo/client';\nexport default function AnimePage(props) {\n    const location = useLocation();\n    const ANIMEQUERY = gql`\n    {\n        series: Media(type: ANIME, id: ${location.state.id}) {\n        id\n        title {\n          english\n          romaji\n        }\n        genres\n        description\n        coverImage {\n          medium\n          large\n          extraLarge\n        }\n        studios {\n          nodes {\n            name\n          }\n        }\n        episodes\n        season\n        seasonYear\n      }\n    }`\n\n    const params = useParams();\n    const {error, loading, data} = useQuery(ANIMEQUERY);\n\n    useEffect(()=>{\n        }, [data]\n    );\n\n    \n    if (loading) return <p>Loading1...</p>\n    if (error) return <p>Error1 :(</p>\n\n    \n    let animedata = {\n        name: (data.series.title.english==null)\n            ? data.series.title.romaji :\n            data.series.title.english,\n        image: data.series.coverImage.large,\n        genre: data.series.genres,\n        studio: data.series.studios.nodes[0].name,\n        description: data.series.description,\n        episodes: data.series.episodes,\n        season: data.series.season,\n        seasonYear: data.series.seasonYear\n    }\n\n    \n        return(\n            <Fragment>\n                <Link to={'/Anime'}><Button>Return</Button></Link>\n                <TopSpace/>\n                <Router>\n                    <Container fluid>\n                    <p>{animedata.name}</p>\n                    <Row>\n                        <img id=\"HomePage_card_image\" src={animedata.image}/>\n                        <Col>\n                            <ButtonGroup vertical block>\n                                <Link id=\"tab_name\" to={`/Anime/${location.state.id}/ratings`}><Button>\n                                    Overall Ratings\n                                </Button></Link>\n                                <Link id=\"tab_name\" to={`/Anime/${location.state.id}/information`}><Button>\n                                    Information\n                                </Button></Link>\n                                <Link id=\"tab_name\" to={`/Anime/${location.state.id}/key-staff`}><Button>\n                                    Key Staff\n                                </Button></Link>\n                                <Link id=\"tab_name\" to={`/Anime/${location.state.id}/reviews`}><Button>\n                                    Reviews\n                                </Button></Link>\n                                <Link id=\"tab_name\" to={`/Anime/${location.state.id}/recommendations`}><Button>\n                                    Recommendations\n                                </Button></Link>\n                            </ButtonGroup>\n                        </Col>\n                        <Col>\n                            <div>\n                                <Row>\n                                    <Switch>\n                                        <Route exact path='/' component={Login} />\n                                        <Route path=\"/Anime/:animeid/ratings\" component={Rating} />\n                                        <Route path=\"/Anime/:animeid/information\" component={() =><AnimeInfo name = {animedata.name} genre = {animedata.genre} \n                                            summary = {animedata.description} season = {animedata.season} seasonYear = {animedata.seasonYear}\n                                            episodes = {animedata.episodes} />} />\n                                        <Route path=\"/Anime/:animeid/key-staff\" component={() =><KeyStaff studio = {animedata.studio} siteurl = {animedata.siteUrl} />} />\n                                        <Route path=\"/Anime/:animeid/reviews\" component={Reviews} />\n                                        <Route path=\"/Anime/:animeid/recommendations\" component={() => <Recommendations />} />\n                                    </Switch>\n                                </Row>\n                            </div>\n                        </Col>    \n                    </Row>                \n                </Container>\n                </Router>\n            </Fragment>\n        );\n    \n}"]},"metadata":{},"sourceType":"module"}
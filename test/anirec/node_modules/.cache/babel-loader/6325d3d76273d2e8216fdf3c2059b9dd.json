{"ast":null,"code":"import { gql } from '@apollo/client';\nimport React from \"react\";\nexport default function GenreQuery(props) {\n  const GENRE_QUERY = gql`\n    {\n        Page(page: 1, perPage: 50){\n          pageInfo{\n            lastPage\n          }\n          media(type: ANIME, isAdult: false, genre: $genres){\n            title{\n              english\n              romaji\n            }\n            genres\n            description\n            coverImage{\n              medium\n              large\n              extraLarge\n            }\n            studios{\n              nodes{\n                name\n              }\n            }\n          }\n        }\n    }`;\n  const genreQueryStr = GENRE_QUERY.loc.source.body;\n  const temp = genreQueryStr.split('\\n');\n  temp.slice(1, 26);\n  temp.replace(`$genres`, props);\n  const finalQuery = gql`\n        ${temp.join(`\\n`)}\n    `;\n  return finalQuery;\n}\n_c = GenreQuery;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreQuery\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/components/dynamic_genre_query.js"],"names":["gql","React","GenreQuery","props","GENRE_QUERY","genreQueryStr","loc","source","body","temp","split","slice","replace","finalQuery","join"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACrC,QAAMC,WAAW,GAAGJ,GACnB;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MA1BI;AA4BA,QAAMK,aAAa,GAAGD,WAAW,CAACE,GAAZ,CAAgBC,MAAhB,CAAuBC,IAA7C;AACA,QAAMC,IAAI,GAAGJ,aAAa,CAACK,KAAd,CAAoB,IAApB,CAAb;AACAD,EAAAA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAc,SAAd,EAAwBT,KAAxB;AAEA,QAAMU,UAAU,GAAGb,GAAI;AAC3B,UAAUS,IAAI,CAACK,IAAL,CAAW,IAAX,CAAgB;AAC1B,KAFI;AAGA,SAAOD,UAAP;AACH;KAtCuBX,U","sourcesContent":["import {gql} from '@apollo/client'\nimport React from \"react\";\n\nexport default function GenreQuery(props){\n    const GENRE_QUERY = gql\n    `\n    {\n        Page(page: 1, perPage: 50){\n          pageInfo{\n            lastPage\n          }\n          media(type: ANIME, isAdult: false, genre: $genres){\n            title{\n              english\n              romaji\n            }\n            genres\n            description\n            coverImage{\n              medium\n              large\n              extraLarge\n            }\n            studios{\n              nodes{\n                name\n              }\n            }\n          }\n        }\n    }`\n\n    const genreQueryStr = GENRE_QUERY.loc.source.body\n    const temp = genreQueryStr.split('\\n')\n    temp.slice(1, 26)\n    temp.replace(`$genres`, props)\n\n    const finalQuery = gql`\n        ${temp.join(`\\n`)}\n    `\n    return finalQuery\n}\n\n"]},"metadata":{},"sourceType":"module"}
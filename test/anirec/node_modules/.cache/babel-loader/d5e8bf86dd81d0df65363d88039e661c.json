{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/listing_pages/UserSpecificShowMore.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport \"./UserSpecificShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Button, Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid';\nimport { chunk } from 'lodash';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserShowMore() {\n  _s();\n\n  // query for data\n  const params = useParams();\n  const location = useLocation();\n  const arr = location.state.userRecShows;\n  const displayedShows = [];\n\n  for (let i = 0; i < 48; i++) {\n    displayedShows.push(arr[i]);\n  }\n\n  useEffect(() => {}, []);\n  const rows = chunk(displayedShows, 4);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        id: \"back_btn_space\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"back_btn\",\n          to: \"/Anime\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"back_btn\",\n            id: \"btn-right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        id: \"grid\",\n        children: rows.map(cols => /*#__PURE__*/_jsxDEV(Row, {\n          children: cols.map(col => /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            id: \"grid-content\",\n            children: /*#__PURE__*/_jsxDEV(ListingPageShowCard, {\n              id: col.Page.media.id,\n              image: col.Page.media.coverImage.large,\n              name: col.Page.media.title.english == null ? col.Page.media.title.romaji : col.Page.media.title.english,\n              genre: col.Page.media.genres,\n              studio: col.Page.media.studios.nodes.length > 5 ? col.Page.media.studios.nodes.slice(0, 6).map(studio_name => studio_name.name).join(', ') : col.Page.media.studios.nodes.map(studio_name => studio_name.name).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserShowMore, \"g4W7Gn4jnjQnPb46wq7sxtrk5Us=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = UserShowMore;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserShowMore\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/listing_pages/UserSpecificShowMore.js"],"names":["React","Fragment","useEffect","TopSpace","ListingPageShowCard","Button","Container","Col","Row","Grid","chunk","Link","useLocation","useParams","UserShowMore","params","location","arr","state","userRecShows","displayedShows","i","push","rows","map","cols","col","Page","media","id","coverImage","large","title","english","romaji","genres","studios","nodes","length","slice","studio_name","name","join"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport \"./UserSpecificShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Button, Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid'\nimport { chunk } from 'lodash'\nimport { Link, useLocation, useParams } from 'react-router-dom';\n \nexport default function UserShowMore(){\n    // query for data\n    const params = useParams();\n    const location = useLocation();\n    const arr = location.state.userRecShows;\n\n    const displayedShows = []\n    for (let i = 0; i < 48; i++) {\n        displayedShows.push(arr[i])\n    }\n\n    useEffect(()=>{\n       }, []\n    );\n\n    const rows = chunk(displayedShows, 4)\n    return (\n        <Fragment>\n            <TopSpace />\n            <Container className=\"\">\n                {/* back btn */}\n                <Row id=\"back_btn_space\">\n                    <Link className=\"back_btn\" to={\"/Anime\"}>\n                        <Button className=\"back_btn\" id=\"btn-right\"><strong>Home</strong></Button>\n                    </Link>\n                </Row>\n                <Grid id=\"grid\">\n                    {/* main grid content  */}\n                    {rows.map((cols) => (\n                        <Row>\n                            {cols.map((col) => (\n                                <Col md={3} id=\"grid-content\">\n                                    <ListingPageShowCard   \n                                        id={col.Page.media.id}\n                                        image={col.Page.media.coverImage.large} \n                                        name={(col.Page.media.title.english==null)\n                                            ? col.Page.media.title.romaji :\n                                            col.Page.media.title.english}\n                                        genre={col.Page.media.genres}\n                                        studio={(col.Page.media.studios.nodes.length > 5) ? col.Page.media.studios.nodes.slice(0,6).map(studio_name => \n                                            studio_name.name).join(', ') :\n                                            col.Page.media.studios.nodes.map(studio_name => \n                                            studio_name.name).join(', ')}/>\n                                </Col>\n                            )\n                            )}\n                        </Row>\n                    )\n                    )}\n                </Grid>\n            </Container>\n        </Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}
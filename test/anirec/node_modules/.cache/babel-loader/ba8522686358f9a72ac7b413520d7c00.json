{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/components/listing_pages/show_more_page.js\";\nimport React, { Component, Fragment, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./show_more_page.css\";\nimport { AIRING_NOW } from '../../GraphQL/Queries';\nimport { useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowMorePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n\n    this.getAnime = async (query, variables) => {\n      try {\n        const response = await axios.post('https://graphql.anilist.co', {\n          query,\n          variables\n        }); //log the data\n\n        console.log(response.data); //set the data to the state\n\n        this.setState(() => ({\n          isLoaded: true,\n          items: response.data.data.Page.media\n        }));\n      } catch (error) {\n        //if there's an error, set the error to the state\n        this.setState(() => ({\n          error\n        }));\n      }\n    };\n  }\n\n  mountComponent() {\n    const variables_find = {};\n    this.getAnime(AIRING_NOW, variables_find);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"App\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(ShowCard, {\n            name: item.title.english == null ? item.title.romaji : item.title.english,\n            image: item.coverImage.large,\n            genre: item.genres.join(', '),\n            studio: item.studios.nodes[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default ShowMorePage;","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/components/listing_pages/show_more_page.js"],"names":["React","Component","Fragment","useEffect","axios","AIRING_NOW","useQuery","ShowMorePage","state","error","isLoaded","items","getAnime","query","variables","response","post","console","log","data","setState","Page","media","mountComponent","variables_find","render","message","map","item","title","english","romaji","coverImage","large","genres","join","studios","nodes","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAChCO,KADgC,GACxB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADwB;;AAAA,SAOhCC,QAPgC,GAOrB,OAAOC,KAAP,EAAcC,SAAd,KAA4B;AACnC,UAAG;AACD,cAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,4BAAX,EAAyC;AAACH,UAAAA,KAAD;AAAQC,UAAAA;AAAR,SAAzC,CAAvB,CADC,CAGD;;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EAJC,CAMD;;AACA,aAAKC,QAAL,CAAc,OAAO;AACnBV,UAAAA,QAAQ,EAAE,IADS;AAEnBC,UAAAA,KAAK,EAAEI,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBE,IAAnB,CAAwBC;AAFZ,SAAP,CAAd;AAID,OAXD,CAWE,OAAOb,KAAP,EAAc;AACd;AACA,aAAKW,QAAL,CAAc,OAAO;AAACX,UAAAA;AAAD,SAAP,CAAd;AACD;AACJ,KAvB+B;AAAA;;AAyBhCc,EAAAA,cAAc,GAAE;AACZ,UAAMC,cAAc,GAAE,EAAtB;AAEA,SAAKZ,QAAL,CAAcP,UAAd,EAA0BmB,cAA1B;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKH,KAAvC;;AAEI,QAAGC,KAAH,EAAU;AACN,0BAAM;AAAA,kBAAMA,KAAK,CAACiB;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAN;AACH,KAFD,MAEM,IAAI,CAAChB,QAAL,EAAe;AACjB,0BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AACH,KAFK,MAED;AACD,0BACI,QAAC,QAAD;AAAA,gCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAG,KAAvB;AAAA,oBACKC,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACX,QAAC,QAAD;AACI,YAAA,IAAI,EAAGA,IAAI,CAACC,KAAL,CAAWC,OAAX,IAAoB,IAArB,GACAF,IAAI,CAACC,KAAL,CAAWE,MADX,GAEFH,IAAI,CAACC,KAAL,CAAWC,OAHnB;AAII,YAAA,KAAK,EAAEF,IAAI,CAACI,UAAL,CAAgBC,KAJ3B;AAKI,YAAA,KAAK,EAAGL,IAAI,CAACM,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CALZ;AAMI,YAAA,MAAM,EAAEP,IAAI,CAACQ,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC;AANlC;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH;AACR;;AA5D+B;;AAiEpC,eAAe/B,YAAf","sourcesContent":["import React, { Component, Fragment, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./show_more_page.css\";\nimport {AIRING_NOW} from '../../GraphQL/Queries';\nimport {useQuery} from '@apollo/client';\n\nclass ShowMorePage extends Component{\n    state = {\n        error: null, \n        isLoaded: false,\n        items: []\n    }\n    \n    getAnime = async (query, variables) => {\n        try{ \n          const response = await axios.post('https://graphql.anilist.co', {query, variables});\n    \n          //log the data\n          console.log(response.data)\n    \n          //set the data to the state\n          this.setState(() => ({\n            isLoaded: true,\n            items: response.data.data.Page.media\n          }));\n        } catch (error) {\n          //if there's an error, set the error to the state\n          this.setState(() => ({error}))\n        }\n    }\n\n    mountComponent(){\n        const variables_find ={};\n    \n        this.getAnime(AIRING_NOW, variables_find);\n        \n\n    }\n\n    render (){\n        const { error, isLoaded, items} = this.state;\n    \n            if(error) {\n                return<div>{error.message}</div>;\n            }else if (!isLoaded) {\n                return<div>Loading...</div>;\n            }else{\n                return (\n                    <Fragment>\n                        <Header />\n                        <TopSpace />\n                        <Container className = \"App\">\n                            {items.map(item => (\n                                <ShowCard \n                                    name={(item.title.english==null)\n                                        ? item.title.romaji :\n                                        item.title.english}\n                                    image={item.coverImage.large}\n                                    genre= {item.genres.join(', ')}\n                                    studio={item.studios.nodes[0].name}\n                            />\n                        ))}\n                        </Container>\n                    </Fragment>\n                );\n            }\n    }\n    \n\n}\n\nexport default ShowMorePage;"]},"metadata":{},"sourceType":"module"}
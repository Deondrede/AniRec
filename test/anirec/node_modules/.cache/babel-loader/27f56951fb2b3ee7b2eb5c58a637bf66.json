{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/components/listing_pages/show_more_page.js\";\nimport React, { Component, Fragment, useEffect } from \"react\";\nimport \"./show_more_page.css\";\nimport Header from \"../global_elements/Header\";\nimport TopSpace from \"../global_elements/TopSpacer\";\nimport { AIRING_NOW } from '../../GraphQL/Queries';\nimport ShowCard from '../home_page/ShowCard';\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport axios from 'axios'; //controls how the animes are displayed\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GridItem = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"grid__flex\",\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"grid__img\",\n    src: props.image,\n    alt: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = GridItem;\n\nclass ShowMorePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n\n    this.getAnime = async (query, variables) => {\n      try {\n        const response = await axios.post('https://graphql.anilist.co', {\n          query,\n          variables\n        }); //log the data\n\n        console.log(response.data); //set the data to the state\n\n        this.setState(() => ({\n          isLoaded: true,\n          items: response.data.data.Page.media\n        }));\n      } catch (error) {\n        //if there's an error, set the error to the state\n        this.setState(() => ({\n          error\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    //This is the GraphQL query\n    //can change the sort to what we want (popularity, trending, etc.)\n    const query_find = `\n        query {\n          Page {\n            media( isAdult: false, type:ANIME, sort:POPULARITY_DESC) {\n              id\n              title {\n                romaji\n                english\n              }\n              coverImage {\n                large\n                medium\n              }\n              genres\n            }\n          }\n        }\n        `; //These variables are optional, leave empty for now\n\n    const variables_find = {}; //we call the methos here to executre our async function\n\n    this.getAnime(query_find, variables_find);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(GridItem, {\n          image: item.coverImage.large,\n          title: item.title.english,\n          genres: item.genres\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default ShowMorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridItem\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/components/listing_pages/show_more_page.js"],"names":["React","Component","Fragment","useEffect","Header","TopSpace","AIRING_NOW","ShowCard","Container","Row","Col","Button","axios","GridItem","props","image","title","ShowMorePage","state","error","isLoaded","items","getAnime","query","variables","response","post","console","log","data","setState","Page","media","componentDidMount","query_find","variables_find","render","message","map","item","coverImage","large","english","genres","id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useEffect } from \"react\";\nimport \"./show_more_page.css\";\nimport Header from \"../global_elements/Header\";\nimport TopSpace from \"../global_elements/TopSpacer\";\nimport {AIRING_NOW} from '../../GraphQL/Queries';\nimport ShowCard from '../home_page/ShowCard';\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport axios from 'axios';\n\n//controls how the animes are displayed\nconst GridItem = (props) => (\n  <div className=\"grid__flex\">\n    <img className=\"grid__img\" src={props.image} alt={props.title}/>\n    <h3>{props.title}</h3>\n  </div>\n)\n\nclass ShowMorePage extends Component{\n    state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      }\n    \n      getAnime = async (query, variables) => {\n        try{ \n          const response = await axios.post('https://graphql.anilist.co', {query, variables});\n    \n          //log the data\n          console.log(response.data)\n    \n          //set the data to the state\n          this.setState(() => ({\n            isLoaded: true,\n            items: response.data.data.Page.media\n          }));\n        } catch (error) {\n          //if there's an error, set the error to the state\n          this.setState(() => ({error}))\n        }\n      }\n    \n      componentDidMount() \n      {\n        //This is the GraphQL query\n    \n        //can change the sort to what we want (popularity, trending, etc.)\n        const query_find = `\n        query {\n          Page {\n            media( isAdult: false, type:ANIME, sort:POPULARITY_DESC) {\n              id\n              title {\n                romaji\n                english\n              }\n              coverImage {\n                large\n                medium\n              }\n              genres\n            }\n          }\n        }\n        `;\n    \n        //These variables are optional, leave empty for now\n        const variables_find ={\n        };\n    \n        //we call the methos here to executre our async function\n        this.getAnime(query_find, variables_find)\n      }\n        \n      \n    \n      render() {\n        const { error, isLoaded, items} = this.state;\n    \n        if(error) {\n          return<div>{error.message}</div>;\n        }else if (!isLoaded) {\n          return<div>Loading...</div>;\n        }else{\n          return (\n            <div className=\"grid\">\n              {items.map(item => (\n                <GridItem key={item.id} \n                          image={item.coverImage.large} \n                          title={item.title.english}\n                          genres={item.genres}/>\n              ))}\n            </div>\n          );\n        }\n      }\n}\n\nexport default ShowMorePage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jason/AniRec/test/anirec/src/pages/listing_pages/ShowMore.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport \"./ShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid';\nimport { chunk } from 'lodash';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowMore(props) {\n  _s();\n\n  const location = useLocation();\n  const queryObj = {\n    error,\n    loading,\n    data\n  };\n\n  if (location.state.containVariables) {\n    queryObj = useQuery(location.state.query, location.state.variables);\n  } else {\n    queryObj = useQuery(location.state);\n  }\n\n  useEffect(() => {}, [data]);\n  if (queryObj.loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading1...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 34\n  }, this);else if (queryObj.error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error1 :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 37\n  }, this);else {\n    const rows = chunk(queryObj.data.Page.media, 4);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TopSpace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"float-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          id: \"back_btn_space\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            class: \"back_btn\",\n            to: \"/Anime\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: rows.map(cols => /*#__PURE__*/_jsxDEV(Row, {\n            children: cols.map(col => /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(ListingPageShowCard, {\n                image: col.coverImage.large,\n                name: col.title.english == null ? col.title.romaji : col.title.english,\n                genre: col.genres.join(', '),\n                studio: col.studios.nodes.map(studio_name => studio_name.name).join(', ')\n              }, col.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ShowMore, \"HYHeN+iVKQq1p0g9WtzUxK0Yiog=\", false, function () {\n  return [useLocation, useQuery, useQuery];\n});\n\n_c = ShowMore;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMore\");","map":{"version":3,"sources":["/home/jason/AniRec/test/anirec/src/pages/listing_pages/ShowMore.js"],"names":["React","Fragment","useEffect","TopSpace","ListingPageShowCard","Container","Col","Row","Grid","chunk","Link","useLocation","useQuery","ShowMore","props","location","queryObj","error","loading","data","state","containVariables","query","variables","rows","Page","media","map","cols","col","coverImage","large","title","english","romaji","genres","join","studios","nodes","studio_name","name","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport \"./ShowMore.css\";\nimport TopSpace from \"../../components/global_elements/TopSpacer\";\nimport ListingPageShowCard from '../../components/ListingPageShowCard';\nimport { Container } from \"react-bootstrap\";\nimport { Col, Row, Grid } from 'react-flexbox-grid'\nimport { chunk } from 'lodash'\nimport { Link, useLocation } from 'react-router-dom';\nimport {useQuery} from '@apollo/client'\n\nexport default function ShowMore(props){\n    const location = useLocation();\n    const queryObj = {error, loading, data}\n    if (location.state.containVariables){\n        queryObj = useQuery(location.state.query, location.state.variables);\n    }\n    else{\n        queryObj = useQuery(location.state);\n    }\n\n    useEffect(()=>{\n       }, [data]\n    );\n\n    if (queryObj.loading) return <p>Loading1...</p>\n    else if (queryObj.error) return <p>Error1 :(</p>\n    else{\n        const rows = chunk(queryObj.data.Page.media, 4)\n        return (\n            <Fragment>\n                <TopSpace />\n                <Container className=\"float-md-3\">\n                    <Row id=\"back_btn_space\">\n                        <Link class=\"back_btn\" to={\"/Anime\"}><strong>Back</strong></Link>\n                    </Row>\n                    <Grid>\n                        {rows.map((cols) => (\n                            <Row>\n                                {cols.map((col) => (\n                                    <Col md={3}>\n                                        <ListingPageShowCard key={col.id} \n                                            image={col.coverImage.large} \n                                            name={(col.title.english==null)\n                                                ? col.title.romaji :\n                                                col.title.english}\n                                            genre={col.genres.join(', ')}\n                                            studio={col.studios.nodes.map(studio_name => \n                                                studio_name.name).join(', ')}/>\n                                    </Col>\n                                )\n                                )}\n                            </Row>\n                        )\n                        )}\n                    </Grid>\n                </Container>\n            </Fragment>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}